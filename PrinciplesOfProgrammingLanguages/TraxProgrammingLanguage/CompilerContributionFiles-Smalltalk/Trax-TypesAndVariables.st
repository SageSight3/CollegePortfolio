Object subclass: #TraxType	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Trax-TypesAndVariables'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!TraxType class	instanceVariableNames: 'default'!!TraxType class methodsFor: 'instance creation' stamp: 'jws 11/8/2023 10:50'!new	NotImplemented signal: 'This is a singleton.'! !!TraxType class methodsFor: 'accessing' stamp: 'jws 11/8/2023 10:51'!default	default isNil		ifTrue: [default := super new].	^default! !TraxType subclass: #TraxBooleanType	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Trax-TypesAndVariables'!!TraxBooleanType methodsFor: 'type checking' stamp: 'SA 11/15/2023 16:24'!checkType: shouldBeBoolean 		shouldBeBoolean isBoolean ifFalse: [TraxTypeError signal:'expected a boolean']! !TraxType subclass: #TraxIntegerType	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Trax-TypesAndVariables'!!TraxIntegerType methodsFor: 'type checker' stamp: 'SA 11/15/2023 16:25'!checkType: shouldBeInteger 	shouldBeInteger isInteger ifFalse: [TraxTypeError signal:'expected an integer']! !TraxType subclass: #TraxStringType	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Trax-TypesAndVariables'!!TraxStringType methodsFor: 'type checker' stamp: 'SA 11/15/2023 16:27'!checkType: shouldBeString 	shouldBeString isString ifFalse: [TraxTypeError signal:'expected a string']! !TestCase subclass: #TraxTypeTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Trax-TypesAndVariables'!!TraxTypeTest methodsFor: 'running' stamp: 'jws 11/9/2023 10:10'!testBooleanType	TraxBooleanType default checkType: false.	self 		should: [TraxBooleanType default checkType: 'hello']		raise: TraxTypeError.	self 		should: [TraxBooleanType default checkType: 42]		raise: TraxTypeError.	! !!TraxTypeTest methodsFor: 'running' stamp: 'jws 11/9/2023 10:10'!testIntegerType	TraxIntegerType default checkType: 42.	self 		should: [TraxIntegerType default checkType: 'hello']		raise: TraxTypeError.	self 		should: [TraxIntegerType default checkType: true]		raise: TraxTypeError.	! !!TraxTypeTest methodsFor: 'running' stamp: 'jws 11/8/2023 10:46'!testIsSingleton	self assert: TraxBooleanType default == TraxBooleanType default.	self assert: TraxIntegerType default == TraxIntegerType default.	self assert: TraxStringType default == TraxStringType default.	self		should: [TraxBooleanType new]		raise: Error.! !!TraxTypeTest methodsFor: 'running' stamp: 'jws 11/9/2023 10:09'!testStringType	TraxStringType default checkType: 'hello'.	self 		should: [TraxStringType default checkType: 42]		raise: TraxTypeError.	self 		should: [TraxStringType default checkType: true]		raise: TraxTypeError.	! !Object subclass: #TraxVariable	instanceVariableNames: 'value type'	classVariableNames: ''	poolDictionaries: ''	category: 'Trax-TypesAndVariables'!!TraxVariable methodsFor: 'accessing' stamp: 'SA 11/15/2023 16:55'!get	^value! !!TraxVariable methodsFor: 'accessing' stamp: 'SA 11/15/2023 16:54'!set: aValue	self type checkType: aValue.	value := aValue.! !!TraxVariable methodsFor: 'accessing' stamp: 'SA 11/15/2023 16:46'!type	^ type! !!TraxVariable methodsFor: 'accessing' stamp: 'SA 11/15/2023 16:47'!type: aTraxType 	type := aTraxType! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!TraxVariable class	instanceVariableNames: ''!!TraxVariable class methodsFor: 'instance creation' stamp: 'SA 11/15/2023 16:51'!boolean	| aTraxVariable aTraxType |	aTraxVariable := self new.	aTraxType := TraxBooleanType default.	aTraxVariable type: aTraxType.	^aTraxVariable	! !!TraxVariable class methodsFor: 'instance creation' stamp: 'SA 11/15/2023 16:42'!integer	| aTraxVariable aTraxType |	aTraxVariable := self new.	aTraxType := TraxIntegerType default.	aTraxVariable type: aTraxType.	^aTraxVariable! !!TraxVariable class methodsFor: 'instance creation' stamp: 'SA 11/15/2023 16:51'!string	| aTraxVariable aTraxType |	aTraxVariable := self new.	aTraxType := TraxStringType default.	aTraxVariable type: aTraxType.	^aTraxVariable	! !TestCase subclass: #TraxVariableTest	instanceVariableNames: 'integerVariable booleanVariable stringVariable'	classVariableNames: ''	poolDictionaries: ''	category: 'Trax-TypesAndVariables'!!TraxVariableTest methodsFor: 'initialize-release' stamp: 'jws 11/9/2023 10:26'!setUp	super setUp.	integerVariable := TraxVariable integer.	stringVariable := TraxVariable string.	booleanVariable := TraxVariable boolean.	! !!TraxVariableTest methodsFor: 'initialize-release' stamp: 'jws 11/9/2023 10:27'!tearDown	integerVariable := nil.	stringVariable := nil.	booleanVariable := nil.	super tearDown.! !!TraxVariableTest methodsFor: 'running' stamp: 'jws 11/9/2023 10:37'!testBooleanTypeError	self 		should: [self booleanVariable set: 9]		raise: TraxTypeError.	self 		should: [self booleanVariable set: 'hello']		raise: TraxTypeError.! !!TraxVariableTest methodsFor: 'running' stamp: 'jws 11/9/2023 10:35'!testBooleanTypeHappyPath	self assert: self booleanVariable get isNil.	self booleanVariable set: true.	self assert: true equals: self booleanVariable get.	self booleanVariable set: false.	self assert: false equals: self booleanVariable get.! !!TraxVariableTest methodsFor: 'running' stamp: 'jws 11/9/2023 10:38'!testIntegerTypeError	self 		should: [self integerVariable set: true]		raise: TraxTypeError.	self 		should: [self integerVariable set: 'hello']		raise: TraxTypeError.! !!TraxVariableTest methodsFor: 'running' stamp: 'jws 11/9/2023 10:33'!testIntegerTypeHappyPath	self assert: self integerVariable get isNil.	self integerVariable set: 42.	self assert: 42 equals: self integerVariable get.	self integerVariable set: 72.	self assert: 72 equals: self integerVariable get.! !!TraxVariableTest methodsFor: 'running' stamp: 'jws 11/9/2023 10:38'!testStringTypeError	self 		should: [self stringVariable set: true]		raise: TraxTypeError.	self 		should: [self stringVariable set: 42]		raise: TraxTypeError.! !!TraxVariableTest methodsFor: 'running' stamp: 'jws 11/9/2023 10:34'!testStringTypeHappyPath	self assert: self stringVariable get isNil.	self stringVariable set: 'hello'.	self assert: 'hello' equals: self stringVariable get.	self stringVariable set: 'goodbye'.	self assert: 'goodbye' equals: self stringVariable get.! !!TraxVariableTest methodsFor: 'accessing' stamp: 'jws 11/9/2023 10:18'!booleanVariable	^ booleanVariable! !!TraxVariableTest methodsFor: 'accessing' stamp: 'jws 11/9/2023 10:18'!booleanVariable: anObject	booleanVariable := anObject.! !!TraxVariableTest methodsFor: 'accessing' stamp: 'jws 11/9/2023 10:18'!integerVariable	^ integerVariable! !!TraxVariableTest methodsFor: 'accessing' stamp: 'jws 11/9/2023 10:18'!integerVariable: anObject	integerVariable := anObject.! !!TraxVariableTest methodsFor: 'accessing' stamp: 'jws 11/9/2023 10:18'!stringVariable	^ stringVariable! !!TraxVariableTest methodsFor: 'accessing' stamp: 'jws 11/9/2023 10:18'!stringVariable: anObject	stringVariable := anObject.! !